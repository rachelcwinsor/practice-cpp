Lecture 1.3

- (Command Line) Where to find header files: -I<pathname>
- (Command Line) Look for header files in current directory: -I.

//header files
- Preventing double or circular inclusion:
#ifndef __FILENAME_H
#define __FILENAME_H
/**********************/
/		       /
/**********************/
#endif

Lecture 1.4

compile in emacs shell (option/alt + x) M-x shell

c++ fileName.cpp -o fileName -std=c++14
./fileName to run executable (from the current working directory)


c++ -c fileName.cpp -o fileName.o -std=c++14
c++ fileName.o -o fileName -> separates compiling and linking

c++ -c -g fileName.cpp -o fileName.o -std=c++14
c++ -g fileName.o -o fileName -> add debug information/flags

Lecture 1.5 Namespaces
- Group or entity that are related in some way (related to io, or graphs, etc.)
** option+p (up) and option+n (down) in emacs shell
**ctrl+x+(right arrow key) -> emacs shell to buffer (right arrow key for buffer to shell)

Lecture 1.6 Standard IO
-Streams = objects representing:
	Standard input (cin), Standard output (cout), Standard error (cerr)
	singleton design pattern (there is one copy available when program is created. be careful in multi-threaded environment
